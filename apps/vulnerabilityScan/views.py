# encoding: utf-8
import json

from django.contrib.auth.mixins import LoginRequiredMixin
from django.urls import reverse
from pure_pagination import Paginator, EmptyPage, PageNotAnInteger
from django.http import HttpResponseRedirect, HttpResponse,JsonResponse

from django.shortcuts import render
from vulnerabilityScan.models import PortScan
from .tasks import *
from worker.config import PORTSCAN_DIR


# 前往portscan页
def portscan(request):
	if request.method == "GET":
		return render(request, 'vulnerabilityscann/portScan.html')
	
	if request.method == "POST":
		scriptpath = PORTSCAN_DIR
		ip = request.POST['ip']
		port = request.POST['port']
		threads = request.POST['threads']
		timeout2 = request.POST['timeout2']
		#print(timeout2)
		
		cmd = "python {path}PortScan.py --ip {ip} --port {port} -t {threads}".format(path=scriptpath,ip=ip,port=port,threads= threads)
		print(cmd)
		#result = portscanscript.delay(cmd, 60)
		##实例化Ｃelery
		portscanscript.apply_async((cmd,timeout2))
		return render(request, 'vulnerabilityscann/portScan.html')
		#return JsonResponse('{"status":"success"}',safe=False)

def portscandata(request):
	if request.method == "GET":
		all_data = PortScan.objects.values('id', 'IP', 'Port', 'create_time')
		# resultdict = dict(all_data)
		return JsonResponse(list(all_data), safe=False)


# 前往dirscan页
def dirscan(request):
	if request.method == "GET":
		return render(request, 'vulnerabilityscann/dirScan.html')
	
	if request.method == "POST":
		scriptpath = PORTSCAN_DIR
		ip = request.POST['ip']
		port = request.POST['port']
		threads = request.POST['threads']
		timeout2 = request.POST['timeout2']
		# print(timeout2)
		
		cmd = "python {path}PortScan.py --ip {ip} --port {port} -t {threads}".format(path=scriptpath, ip=ip, port=port,
		                                                                             threads=threads)
		print(cmd)
		# result = portscanscript.delay(cmd, 60)
		##实例化Ｃelery
		portscanscript.apply_async((cmd, timeout2))
		return render(request, 'vulnerabilityscann/dirScan.html')
# return JsonResponse('{"status":"success"}',safe=False)

# 前往dirscan页
def struts(request):
	if request.method == "GET":
		return render(request, 'vulnerabilityscann/struts.html')
	
	if request.method == "POST":
		scriptpath = PORTSCAN_DIR
		ip = request.POST['ip']
		port = request.POST['port']
		threads = request.POST['threads']
		timeout2 = request.POST['timeout2']
		# print(timeout2)
		
		cmd = "python {path}PortScan.py --ip {ip} --port {port} -t {threads}".format(path=scriptpath, ip=ip, port=port,
		                                                                             threads=threads)
		print(cmd)
		# result = portscanscript.delay(cmd, 60)
		##实例化Ｃelery
		portscanscript.apply_async((cmd, timeout2))
		return render(request, 'vulnerabilityscann/struts.html')
# return JsonResponse('{"status":"success"}',safe=False)





